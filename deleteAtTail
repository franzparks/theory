// java.util.* has been imported for this problem.
// You don't need any other imports.

public ListNode deleteAtTail(ListNode head) {
    
	if(head == null || head.next.data == head.data) return null;
	
	ListNode cur = head;
	ListNode prev = head;
	
	while(cur.next != head){
		prev = cur;
		cur = cur.next;
	}
	
	prev.next = cur.next;
	
	return head;

}  
/*
Given a circular-linked list, write a function to delete its tail node and return the modified list's head.
*x = indicates head node
1->2->3->4->*1 ==> 1->2->3->*1

*/
