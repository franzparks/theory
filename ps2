%% Please fill in your name and collaboration statement here.
\newcommand{\studentName}{FRANCIS PHIRI}
\newcommand{\collaborationStatement}{ I worked alone and only with course materials}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[solution, letterpaper]{cscie121}
\usepackage{enumerate}
\usepackage{tikz}
\usepackage{pgf}
\usepackage{tikz}
\usetikzlibrary{arrows,automata}
\usepackage{hyperref}
\usetikzlibrary{automata,positioning}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage[english]{babel}
\usepackage[utf8]{inputenc}
\usepackage{ae,aecompl}

% allow metapost figures to be included inline
% note: you must invoke latex using:
%
%     pdflatex -shell-escape <inputfile>
%
% to allow it to invoke external commands. See the very end of the
% document as well.
\usepackage{emp,ifpdf}
\usepackage{graphicx}

% convert metapost figures to .eps or .pdf automatically when
% including them
\ifpdf\DeclareGraphicsRule{*}{mps}{*}{}\fi

% include the metapost macros
\empprelude{input boxes; input theory}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\begin{document}

\begin{empfile}

\header{2}{Due Friday, September 30, 2016 11:59pm}


\problem{2+2+2+2}{4 lines}
For each of the following, either convert from the language description to a regular expression describing the language or convert from a regular expression to an English description of the language. Assume $\Sigma = \{a,b\}$.

\subproblem $L = \{w \in \Sigma^* : 3$ consecutive $b$'s do not occur in $w \}$
\subproblem $L = \{w \in \Sigma^* : w = \varepsilon \vee w = \sigma_1\sigma_2\dots \sigma_k, k \in \mathbb{N}$, where the characters at odd indices are all the same$\}$
\subproblem $(a\cup b)^* b \cup a(a\cup b)^*$
\subproblem $a\emptyset b\Sigma^*$

\begin{solution}
\subsolution %Part (A)
 $ a^*baa^*(bbaa^*)a^*$
\subsolution %Part (B)

\subsolution %Part (C)
 Any number of $a's$ or $b's$ followed by $b$ or $a$ followed by any number $a's$ or $b's$ 
\subsolution %Part (D)
\end{solution}

\problem{2+3}{1/3 page}

\emph{Note: If designing finite automata using \texttt{madebyevan.com/fsm}, a self-loop can be made by shift+clicking on a state.}

\subproblem For $\Sigma=\{a,b\}$, design an NFA that recognizes the language expressed by $a^*b^*a^*a$. The NFA should have 3 states.

\subproblem For $\Sigma=\{0,1\}$, design a DFA that recognizes the language $L = \{w : w$ contains an even number of 0s and an odd number of 1s and does not contain the substring 01$ \}$


\begin{solution}
\subsolution %Part (A)

\begin{center}

%%% my solution begin

\begin{emp}(0,0)
  % Pick a size of nodes other than the default (bignodes). This
  % also resets the edge color, solid/dashed, etc.
  bignodes;
  u := 3cm;

  % create a node with a zero inside it, centered at the origin
  node.a("q0"); a.c = (0,0);

  % position additional nodes using absolute coordinates
  node.b("q1"); b.c = (u,0);
  node.c("q2"); c.c = (2u,0);
  %node.d("q3"); d.c = (3u,0);
  
  % labels can use LaTeX format with btex ... etex
  %node.e("q4"); e.c = (u,-u);
  makestart(a); makefinal(c);

  edge(a,b,left,A);
  %edge(a,e,left,A);
  edge(b,c,left,A);
 
  % negative angles emerge curved to the left instead of right
  edge(c,b,-45,A);
  %edge(c,b,45,ONE);
  edge(c,a,-60,B);

  loop(a,down,A);
  loop(b,down,B);

  drawboxed(a,b,c);
\end{emp}
%%%% my solution end
\end{center}

\subsolution %Part (B)
\begin{center}

%%% my solution begin

\begin{emp}(0,0)
  % Pick a size of nodes other than the default (bignodes). This
  % also resets the edge color, solid/dashed, etc.
  bignodes;
  u := 3cm;

  % create a node with a zero inside it, centered at the origin
  node.a("q0"); a.c = (0,0);

  % position additional nodes using absolute coordinates
  node.b("q1"); b.c = (u,0);
  node.c("q2"); c.c = (2u,0);
  node.d("q3"); d.c = (0,-u);
  
  % labels can use LaTeX format with btex ... etex
  node.e("q4"); e.c = (2u,-u);
  makestart(a); makefinal(d,e);

  edge(a,b,left,ZERO);
  edge(b,c,left,ONE);
  edge(d,b,left,ZERO);
 
 
  % negative angles emerge curved to the left instead of right
  edge(b,e,-45,ZERO);
  edge(e,b,-45,ZERO);
  edge(a,d,-45,ONE);
  edge(d,a,-45,ONE);
   edge(e,c,-30,ONE);

  loop(c,up,ZEROONE);
  %loop(b,down,B);

  drawboxed(a,b,c,d,e);
\end{emp}
%%%% my solution end
\end{center}

\end{solution}

\problem{4}{1/2 page}
Convert the following NFA into an equivalent DFA using the subset construction. Provide a formal description (5-tuple) and diagram for full credit.

\begin{center}
\begin{tikzpicture}[scale=0.2]
\tikzstyle{every node}+=[inner sep=0pt]
\draw [black] (13.6,-25.6) circle (3);
\draw (13.6,-25.6) node {$1$};
\draw [black] (27.2,-15.4) circle (3);
\draw (27.2,-15.4) node {$2$};
\draw [black] (27.2,-15.4) circle (2.4);
\draw [black] (27.2,-34.2) circle (3);
\draw (27.2,-34.2) node {$4$};
\draw [black] (27.2,-34.2) circle (2.4);
\draw [black] (48.8,-34.2) circle (3);
\draw (48.8,-34.2) node {$5$};
\draw [black] (48.8,-15.4) circle (3);
\draw (48.8,-15.4) node {$3$};
\draw [black] (10.4,-25.6) -- (10.6,-25.6);
\fill [black] (10.6,-25.6) -- (9.8,-25.1) -- (9.8,-26.1);
\draw [black] (16,-23.8) -- (24.8,-17.2);
\fill [black] (24.8,-17.2) -- (23.86,-17.28) -- (24.46,-18.08);
\draw (21.4,-21) node [below] {$b$};
\draw [black] (16.14,-27.2) -- (24.66,-32.6);
\fill [black] (24.66,-32.6) -- (24.26,-31.75) -- (23.72,-32.59);
\draw (19.4,-30.4) node [below] {$b$};
\draw [black] (46.336,-35.905) arc (-60.40344:-119.59656:16.879);
\fill [black] (46.34,-35.91) -- (45.39,-35.87) -- (45.89,-36.73);
\draw (38,-38.61) node [below] {$b$};
\draw [black] (29.45,-32.223) arc (125.47765:54.52235:14.732);
\fill [black] (29.45,-32.22) -- (30.39,-32.17) -- (29.81,-31.35);
\draw (38,-28.99) node [above] {$a$};
\draw [black] (51.315,-32.587) arc (150.40886:-137.59114:2.25);
\draw (56.16,-33.34) node [right] {$a$};
\fill [black] (51.61,-35.22) -- (52.06,-36.04) -- (52.55,-35.18);
\draw [black] (46.426,-17.226) arc (-57.86012:-122.13988:15.838);
\fill [black] (46.43,-17.23) -- (45.48,-17.23) -- (46.01,-18.08);
\draw (38,-20.15) node [below] {$a$};
\draw [black] (29.421,-13.392) arc (126.2008:53.7992:14.525);
\fill [black] (29.42,-13.39) -- (30.36,-13.32) -- (29.77,-12.52);
\draw (38,-10.09) node [above] {$b$};
\draw [black] (51.311,-13.78) arc (150.56466:-137.43534:2.25);
\draw (56.17,-14.51) node [right] {$b$};
\fill [black] (51.61,-16.41) -- (52.06,-17.24) -- (52.56,-16.37);
\end{tikzpicture}
\end{center}


\begin{solution}

\begin{center}

%%% my solution begin

\begin{emp}(0,0)
  % Pick a size of nodes other than the default (bignodes). This
  % also resets the edge color, solid/dashed, etc.
  hugenodes;
  u := 3cm;

  % create a node with a zero inside it, centered at the origin
  node.a(btex $\{1\}$ etex); a.c = (0,-u);

  % position additional nodes using absolute coordinates
  node.b(btex $\{2,4\}$ etex); b.c = (u,-u);
  node.c(btex $\{5\}$ etex); c.c = (2u,-u);
  node.d(btex $\{3\}$ etex); d.c = (0,0);
  
  % labels can use LaTeX format with btex ... etex
  node.e(btex $\{2,3\}$ etex); e.c = (u,0);
  node.f(btex $\{4,5\}$ etex); f.c = (2u,0);
  node.g(btex $\emptyset$ etex); g.c = (u,-2u);
  
  makestart(a); makefinal(b,e,f);

  edge(a,b,left,B);
  edge(b,d,right,A);
  edge(a,g,left,A);
  edge(b,c,left,B);
  edge(c,g,left,b);
  edge(c,f,left,A);
  edge(f,c,left,B);
 
 
  % negative angles emerge curved to the left instead of right
  %edge(b,e,-45,ZERO);
  %edge(e,b,-45,ZERO);
  %edge(a,d,-45,ONE);
  %edge(d,a,-45,ONE);
  %edge(e,c,-30,ONE);
  edge(e,d,-45,A);
  edge(d,e,-45,B);
  edge(d,g,-85,A);

  loop(e,up,B);
  loop(f,up,A);
  loop(g,down,AB);

  drawboxed(a,b,c,d,e,f,g);
\end{emp}
%%%% my solution end
\end{center}


\par $\{Q, \Sigma, \delta, q_0, F \}$ Where
\par Q = \{\{1\}, \{3\}, \{5\}, \{2, 3\}, \{2, 4\}, \{4, 5\}, \emptyset \}
\par \Sigma = \{a, b\} 
\par F = \{\{2,3\}, \{2, 4\}\} 
\par q0 = \{1\}

\par 

\begin{table}[!htb]
\centering
\label{my-label}
\begin{tabular}{lllll}
   &  & \multicolumn{1}{l|}{}        & a       & b        \\ \cline{3-5} 
\delta: &  & \multicolumn{1}{l|}{\{1\}}   & \emptyset    & \{2, 3\} \\
   &  & \multicolumn{1}{l|}{\{2,4\}} & \{3\}   & \{5\}    \\
   &  & \{3\}                        & \emptyset    & \{2,3\}  \\
   &  & \{5\}                        & \{4,5\} & \emptyset     \\
   &  & \{2,3\}                      & \{3\}   & \{2,3\}  \\
   &  & \{4,5\}                      & \{4,5\} & \{5\}    \\
   &  & \emptyset                         & \emptyset    & \emptyset    
\end{tabular}
\end{table}


\end{solution}

\problem{Challenge!! Not required; worth up to 1}{1/2 a page}

\emph{Note:  On every problem set we will provide a challenge problem, generally significantly more difficult than the other problems in the set, but worth only a few points. It is recommended that if you attempt these problems, you do so only after completing the rest of the assignment.}\\

Suppose we define a deterministic finite array
(a DFArray) as a line of connected finite controls.
Each finite control changes state
according to a deterministic function of its own state and
the state of its left and right neighbors.  For the finite controls on the
two ends of the line which are each missing one neighbor,
these act as if their missing neighbor is a finite control
in a special $missing$ state.  Finally,
each finite control executes the same program (i.e., are identical).

A DFArray accepts the string $w$ under the following conditions:
Start with $|w|$ finite controls connected in a line,
each in a $s_a$ or $s_b$ state,
depending on whether the character corresponding
to that control is $a$ or $b$.
Note that there is no input tape: the finite controls change state
based only on themselves and immediate neighbors.
The entire array ``knows'' the string only through the start
states of the individual controls.

If at least one of the finite
controls eventually reaches a final state, the DFArray accepts
string w.  Note that the DFArray is very different from the DFA or
NDFA -- the only role that the input string $w$ plays is to
determine the initial states of the $|w|$ finite controls.

Design a DFArray to recognize $\{w: w$ is a an odd-length palindrome$\}$.

\begin{solution}
  
\end{solution}


\problem{3+3}{1/4 page}

\noindent Are the following statements true or false?  If a statement is true, justify your answer with a proof. If a statement is false, you may justify your answer with a proof or a counterexample.
\subproblem The union of a countable number of regular languages is regular.
\subproblem
Every subset of a regular language is regular.

\begin{solution}
\subsolution %Part (A)
\subsolution %Part (B)
\end{solution}


\problem{1+1+1+1+1+1}{6 lines}
\noindent Classify the following sets as finite (in which case state the cardinality), countably infinite, or uncountably infinite. Briefly justify your answers.
\subproblem $\{P(\emptyset)\}$
\subproblem $P(\mathbb{N})  \times \mathbb{N}$
\subproblem The set of all syntactically valid C programs
\subproblem The set of all languages over $\{a,b\}$ of strings of exactly 100 symbols
\subproblem The set of all strings over $\{a,b\}$ longer than 100 symbols
\subproblem The set of all languages over $\{a,b\}$ of strings longer than 100 symbols

\begin{solution}
\subsolution %Part (A)
\subsolution %Part (B)
\subsolution %Part (C)
\subsolution %Part (D)
\subsolution %Part (E)
\subsolution %Part (F)
\end{solution}

\problem{0}{}Please estimate the number of hours spent on this assignment to the nearest half hour.\\

\begin{solution}
  
\end{solution}

\end{empfile}

% this invokes metapost on the figures. You must run latex a second
% time for the figures to be included.
\immediate\write18{mpost -tex=latex \jobname}

\end{document}


