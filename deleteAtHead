// java.util.* has been imported for this problem.
// You don't need any other imports.

public ListNode deleteAtHead(ListNode head) {
                
    if(head == null || head.next == head) return null;
    ListNode cur = head;
    ListNode newHead = head.next;
     
    while(cur.next != head){
        cur = cur.next;
    }           

    cur.next = newHead;
    cur = newHead;
     
    return cur;
    
}

/*
Given a circular linked list, implement a method to delete its head node. Return the list's new head node.

*x = indicates head node
1->2->3->4->*1 ==> 2->3->4->*2

*/
